/*
 * Dolphin Scheduler Api Docs
 * Dolphin Scheduler Api Docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.qk.datacenter.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.qk.datacenter.model.Property;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ProcessDefinition
 */
@JsonPropertyOrder({
  ProcessDefinition.JSON_PROPERTY_CODE,
  ProcessDefinition.JSON_PROPERTY_CREATE_TIME,
  ProcessDefinition.JSON_PROPERTY_DESCRIPTION,
  ProcessDefinition.JSON_PROPERTY_FLAG,
  ProcessDefinition.JSON_PROPERTY_GLOBAL_PARAM_LIST,
  ProcessDefinition.JSON_PROPERTY_GLOBAL_PARAM_MAP,
  ProcessDefinition.JSON_PROPERTY_GLOBAL_PARAMS,
  ProcessDefinition.JSON_PROPERTY_ID,
  ProcessDefinition.JSON_PROPERTY_LOCATIONS,
  ProcessDefinition.JSON_PROPERTY_MODIFY_BY,
  ProcessDefinition.JSON_PROPERTY_NAME,
  ProcessDefinition.JSON_PROPERTY_PROJECT_CODE,
  ProcessDefinition.JSON_PROPERTY_PROJECT_NAME,
  ProcessDefinition.JSON_PROPERTY_RELEASE_STATE,
  ProcessDefinition.JSON_PROPERTY_SCHEDULE_RELEASE_STATE,
  ProcessDefinition.JSON_PROPERTY_TENANT_CODE,
  ProcessDefinition.JSON_PROPERTY_TENANT_ID,
  ProcessDefinition.JSON_PROPERTY_TIMEOUT,
  ProcessDefinition.JSON_PROPERTY_UPDATE_TIME,
  ProcessDefinition.JSON_PROPERTY_USER_ID,
  ProcessDefinition.JSON_PROPERTY_USER_NAME,
  ProcessDefinition.JSON_PROPERTY_VERSION,
  ProcessDefinition.JSON_PROPERTY_WARNING_GROUP_ID
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-18T14:27:46.433909+08:00[Asia/Shanghai]")
public class ProcessDefinition {
  public static final String JSON_PROPERTY_CODE = "code";
  private Long code;

  public static final String JSON_PROPERTY_CREATE_TIME = "createTime";
  private OffsetDateTime createTime;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  /**
   * Gets or Sets flag
   */
  public enum FlagEnum {
    FALSE("false"),
    
    TRUE("true");

    private String value;

    FlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FlagEnum fromValue(String value) {
      for (FlagEnum b : FlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FLAG = "flag";
  private FlagEnum flag;

  public static final String JSON_PROPERTY_GLOBAL_PARAM_LIST = "globalParamList";
  private List<Property> globalParamList = null;

  public static final String JSON_PROPERTY_GLOBAL_PARAM_MAP = "globalParamMap";
  private Map<String, String> globalParamMap = null;

  public static final String JSON_PROPERTY_GLOBAL_PARAMS = "globalParams";
  private String globalParams;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private String locations;

  public static final String JSON_PROPERTY_MODIFY_BY = "modifyBy";
  private String modifyBy;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROJECT_CODE = "projectCode";
  private Long projectCode;

  public static final String JSON_PROPERTY_PROJECT_NAME = "projectName";
  private String projectName;

  /**
   * Gets or Sets releaseState
   */
  public enum ReleaseStateEnum {
    OFFLINE("OFFLINE"),
    
    ONLINE("ONLINE");

    private String value;

    ReleaseStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReleaseStateEnum fromValue(String value) {
      for (ReleaseStateEnum b : ReleaseStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RELEASE_STATE = "releaseState";
  private ReleaseStateEnum releaseState;

  /**
   * Gets or Sets scheduleReleaseState
   */
  public enum ScheduleReleaseStateEnum {
    OFFLINE("OFFLINE"),
    
    ONLINE("ONLINE");

    private String value;

    ScheduleReleaseStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ScheduleReleaseStateEnum fromValue(String value) {
      for (ScheduleReleaseStateEnum b : ScheduleReleaseStateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_SCHEDULE_RELEASE_STATE = "scheduleReleaseState";
  private ScheduleReleaseStateEnum scheduleReleaseState;

  public static final String JSON_PROPERTY_TENANT_CODE = "tenantCode";
  private String tenantCode;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private Integer tenantId;

  public static final String JSON_PROPERTY_TIMEOUT = "timeout";
  private Integer timeout;

  public static final String JSON_PROPERTY_UPDATE_TIME = "updateTime";
  private OffsetDateTime updateTime;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private Integer userId;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public static final String JSON_PROPERTY_WARNING_GROUP_ID = "warningGroupId";
  private Integer warningGroupId;


  public ProcessDefinition code(Long code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(Long code) {
    this.code = code;
  }


  public ProcessDefinition createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }


  public ProcessDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public ProcessDefinition flag(FlagEnum flag) {
    this.flag = flag;
    return this;
  }

   /**
   * Get flag
   * @return flag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FlagEnum getFlag() {
    return flag;
  }


  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlag(FlagEnum flag) {
    this.flag = flag;
  }


  public ProcessDefinition globalParamList(List<Property> globalParamList) {
    this.globalParamList = globalParamList;
    return this;
  }

  public ProcessDefinition addGlobalParamListItem(Property globalParamListItem) {
    if (this.globalParamList == null) {
      this.globalParamList = new ArrayList<>();
    }
    this.globalParamList.add(globalParamListItem);
    return this;
  }

   /**
   * Get globalParamList
   * @return globalParamList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAM_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Property> getGlobalParamList() {
    return globalParamList;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAM_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalParamList(List<Property> globalParamList) {
    this.globalParamList = globalParamList;
  }


  public ProcessDefinition globalParamMap(Map<String, String> globalParamMap) {
    this.globalParamMap = globalParamMap;
    return this;
  }

  public ProcessDefinition putGlobalParamMapItem(String key, String globalParamMapItem) {
    if (this.globalParamMap == null) {
      this.globalParamMap = new HashMap<>();
    }
    this.globalParamMap.put(key, globalParamMapItem);
    return this;
  }

   /**
   * Get globalParamMap
   * @return globalParamMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAM_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getGlobalParamMap() {
    return globalParamMap;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAM_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalParamMap(Map<String, String> globalParamMap) {
    this.globalParamMap = globalParamMap;
  }


  public ProcessDefinition globalParams(String globalParams) {
    this.globalParams = globalParams;
    return this;
  }

   /**
   * Get globalParams
   * @return globalParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGlobalParams() {
    return globalParams;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalParams(String globalParams) {
    this.globalParams = globalParams;
  }


  public ProcessDefinition id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ProcessDefinition locations(String locations) {
    this.locations = locations;
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocations() {
    return locations;
  }


  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocations(String locations) {
    this.locations = locations;
  }


  public ProcessDefinition modifyBy(String modifyBy) {
    this.modifyBy = modifyBy;
    return this;
  }

   /**
   * Get modifyBy
   * @return modifyBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MODIFY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModifyBy() {
    return modifyBy;
  }


  @JsonProperty(JSON_PROPERTY_MODIFY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifyBy(String modifyBy) {
    this.modifyBy = modifyBy;
  }


  public ProcessDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ProcessDefinition projectCode(Long projectCode) {
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Get projectCode
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getProjectCode() {
    return projectCode;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectCode(Long projectCode) {
    this.projectCode = projectCode;
  }


  public ProcessDefinition projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProjectName() {
    return projectName;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public ProcessDefinition releaseState(ReleaseStateEnum releaseState) {
    this.releaseState = releaseState;
    return this;
  }

   /**
   * Get releaseState
   * @return releaseState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RELEASE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ReleaseStateEnum getReleaseState() {
    return releaseState;
  }


  @JsonProperty(JSON_PROPERTY_RELEASE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReleaseState(ReleaseStateEnum releaseState) {
    this.releaseState = releaseState;
  }


  public ProcessDefinition scheduleReleaseState(ScheduleReleaseStateEnum scheduleReleaseState) {
    this.scheduleReleaseState = scheduleReleaseState;
    return this;
  }

   /**
   * Get scheduleReleaseState
   * @return scheduleReleaseState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_RELEASE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ScheduleReleaseStateEnum getScheduleReleaseState() {
    return scheduleReleaseState;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_RELEASE_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleReleaseState(ScheduleReleaseStateEnum scheduleReleaseState) {
    this.scheduleReleaseState = scheduleReleaseState;
  }


  public ProcessDefinition tenantCode(String tenantCode) {
    this.tenantCode = tenantCode;
    return this;
  }

   /**
   * Get tenantCode
   * @return tenantCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantCode() {
    return tenantCode;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantCode(String tenantCode) {
    this.tenantCode = tenantCode;
  }


  public ProcessDefinition tenantId(Integer tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public ProcessDefinition timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeout() {
    return timeout;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public ProcessDefinition updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public ProcessDefinition userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public ProcessDefinition userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public ProcessDefinition version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Integer version) {
    this.version = version;
  }


  public ProcessDefinition warningGroupId(Integer warningGroupId) {
    this.warningGroupId = warningGroupId;
    return this;
  }

   /**
   * Get warningGroupId
   * @return warningGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WARNING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWarningGroupId() {
    return warningGroupId;
  }


  @JsonProperty(JSON_PROPERTY_WARNING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarningGroupId(Integer warningGroupId) {
    this.warningGroupId = warningGroupId;
  }


  /**
   * Return true if this ProcessDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessDefinition processDefinition = (ProcessDefinition) o;
    return Objects.equals(this.code, processDefinition.code) &&
        Objects.equals(this.createTime, processDefinition.createTime) &&
        Objects.equals(this.description, processDefinition.description) &&
        Objects.equals(this.flag, processDefinition.flag) &&
        Objects.equals(this.globalParamList, processDefinition.globalParamList) &&
        Objects.equals(this.globalParamMap, processDefinition.globalParamMap) &&
        Objects.equals(this.globalParams, processDefinition.globalParams) &&
        Objects.equals(this.id, processDefinition.id) &&
        Objects.equals(this.locations, processDefinition.locations) &&
        Objects.equals(this.modifyBy, processDefinition.modifyBy) &&
        Objects.equals(this.name, processDefinition.name) &&
        Objects.equals(this.projectCode, processDefinition.projectCode) &&
        Objects.equals(this.projectName, processDefinition.projectName) &&
        Objects.equals(this.releaseState, processDefinition.releaseState) &&
        Objects.equals(this.scheduleReleaseState, processDefinition.scheduleReleaseState) &&
        Objects.equals(this.tenantCode, processDefinition.tenantCode) &&
        Objects.equals(this.tenantId, processDefinition.tenantId) &&
        Objects.equals(this.timeout, processDefinition.timeout) &&
        Objects.equals(this.updateTime, processDefinition.updateTime) &&
        Objects.equals(this.userId, processDefinition.userId) &&
        Objects.equals(this.userName, processDefinition.userName) &&
        Objects.equals(this.version, processDefinition.version) &&
        Objects.equals(this.warningGroupId, processDefinition.warningGroupId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, createTime, description, flag, globalParamList, globalParamMap, globalParams, id, locations, modifyBy, name, projectCode, projectName, releaseState, scheduleReleaseState, tenantCode, tenantId, timeout, updateTime, userId, userName, version, warningGroupId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessDefinition {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    globalParamList: ").append(toIndentedString(globalParamList)).append("\n");
    sb.append("    globalParamMap: ").append(toIndentedString(globalParamMap)).append("\n");
    sb.append("    globalParams: ").append(toIndentedString(globalParams)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    modifyBy: ").append(toIndentedString(modifyBy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    releaseState: ").append(toIndentedString(releaseState)).append("\n");
    sb.append("    scheduleReleaseState: ").append(toIndentedString(scheduleReleaseState)).append("\n");
    sb.append("    tenantCode: ").append(toIndentedString(tenantCode)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    warningGroupId: ").append(toIndentedString(warningGroupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

