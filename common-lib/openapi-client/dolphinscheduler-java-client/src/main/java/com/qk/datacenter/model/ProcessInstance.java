/*
 * Dolphin Scheduler Api Docs
 * Dolphin Scheduler Api Docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.qk.datacenter.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.qk.datacenter.model.DagData;
import com.qk.datacenter.model.ProcessDefinition;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ProcessInstance
 */
@JsonPropertyOrder({
  ProcessInstance.JSON_PROPERTY_CMD_TYPE_IF_COMPLEMENT,
  ProcessInstance.JSON_PROPERTY_COMMAND_PARAM,
  ProcessInstance.JSON_PROPERTY_COMMAND_START_TIME,
  ProcessInstance.JSON_PROPERTY_COMMAND_TYPE,
  ProcessInstance.JSON_PROPERTY_COMPLEMENT_DATA,
  ProcessInstance.JSON_PROPERTY_DAG_DATA,
  ProcessInstance.JSON_PROPERTY_DEPENDENCE_SCHEDULE_TIMES,
  ProcessInstance.JSON_PROPERTY_DRY_RUN,
  ProcessInstance.JSON_PROPERTY_DURATION,
  ProcessInstance.JSON_PROPERTY_END_TIME,
  ProcessInstance.JSON_PROPERTY_ENVIRONMENT_CODE,
  ProcessInstance.JSON_PROPERTY_EXECUTOR_ID,
  ProcessInstance.JSON_PROPERTY_EXECUTOR_NAME,
  ProcessInstance.JSON_PROPERTY_FAILURE_STRATEGY,
  ProcessInstance.JSON_PROPERTY_GLOBAL_PARAMS,
  ProcessInstance.JSON_PROPERTY_HISTORY_CMD,
  ProcessInstance.JSON_PROPERTY_HOST,
  ProcessInstance.JSON_PROPERTY_ID,
  ProcessInstance.JSON_PROPERTY_IS_SUB_PROCESS,
  ProcessInstance.JSON_PROPERTY_LOCATIONS,
  ProcessInstance.JSON_PROPERTY_MAX_TRY_TIMES,
  ProcessInstance.JSON_PROPERTY_NAME,
  ProcessInstance.JSON_PROPERTY_PROCESS_DEFINITION,
  ProcessInstance.JSON_PROPERTY_PROCESS_DEFINITION_CODE,
  ProcessInstance.JSON_PROPERTY_PROCESS_DEFINITION_VERSION,
  ProcessInstance.JSON_PROPERTY_PROCESS_INSTANCE_PRIORITY,
  ProcessInstance.JSON_PROPERTY_PROCESS_INSTANCE_STOP,
  ProcessInstance.JSON_PROPERTY_QUEUE,
  ProcessInstance.JSON_PROPERTY_RECOVERY,
  ProcessInstance.JSON_PROPERTY_RUN_TIMES,
  ProcessInstance.JSON_PROPERTY_SCHEDULE_TIME,
  ProcessInstance.JSON_PROPERTY_START_TIME,
  ProcessInstance.JSON_PROPERTY_STATE,
  ProcessInstance.JSON_PROPERTY_TASK_DEPEND_TYPE,
  ProcessInstance.JSON_PROPERTY_TENANT_CODE,
  ProcessInstance.JSON_PROPERTY_TENANT_ID,
  ProcessInstance.JSON_PROPERTY_TIMEOUT,
  ProcessInstance.JSON_PROPERTY_VAR_POOL,
  ProcessInstance.JSON_PROPERTY_WARNING_GROUP_ID,
  ProcessInstance.JSON_PROPERTY_WARNING_TYPE,
  ProcessInstance.JSON_PROPERTY_WORKER_GROUP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-18T14:27:46.433909+08:00[Asia/Shanghai]")
public class ProcessInstance {
  /**
   * Gets or Sets cmdTypeIfComplement
   */
  public enum CmdTypeIfComplementEnum {
    START_PROCESS("START_PROCESS"),
    
    START_CURRENT_TASK_PROCESS("START_CURRENT_TASK_PROCESS"),
    
    RECOVER_TOLERANCE_FAULT_PROCESS("RECOVER_TOLERANCE_FAULT_PROCESS"),
    
    RECOVER_SUSPENDED_PROCESS("RECOVER_SUSPENDED_PROCESS"),
    
    START_FAILURE_TASK_PROCESS("START_FAILURE_TASK_PROCESS"),
    
    COMPLEMENT_DATA("COMPLEMENT_DATA"),
    
    SCHEDULER("SCHEDULER"),
    
    REPEAT_RUNNING("REPEAT_RUNNING"),
    
    PAUSE("PAUSE"),
    
    STOP("STOP"),
    
    RECOVER_WAITING_THREAD("RECOVER_WAITING_THREAD");

    private String value;

    CmdTypeIfComplementEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CmdTypeIfComplementEnum fromValue(String value) {
      for (CmdTypeIfComplementEnum b : CmdTypeIfComplementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_CMD_TYPE_IF_COMPLEMENT = "cmdTypeIfComplement";
  private CmdTypeIfComplementEnum cmdTypeIfComplement;

  public static final String JSON_PROPERTY_COMMAND_PARAM = "commandParam";
  private String commandParam;

  public static final String JSON_PROPERTY_COMMAND_START_TIME = "commandStartTime";
  private OffsetDateTime commandStartTime;

  /**
   * Gets or Sets commandType
   */
  public enum CommandTypeEnum {
    START_PROCESS("START_PROCESS"),
    
    START_CURRENT_TASK_PROCESS("START_CURRENT_TASK_PROCESS"),
    
    RECOVER_TOLERANCE_FAULT_PROCESS("RECOVER_TOLERANCE_FAULT_PROCESS"),
    
    RECOVER_SUSPENDED_PROCESS("RECOVER_SUSPENDED_PROCESS"),
    
    START_FAILURE_TASK_PROCESS("START_FAILURE_TASK_PROCESS"),
    
    COMPLEMENT_DATA("COMPLEMENT_DATA"),
    
    SCHEDULER("SCHEDULER"),
    
    REPEAT_RUNNING("REPEAT_RUNNING"),
    
    PAUSE("PAUSE"),
    
    STOP("STOP"),
    
    RECOVER_WAITING_THREAD("RECOVER_WAITING_THREAD");

    private String value;

    CommandTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CommandTypeEnum fromValue(String value) {
      for (CommandTypeEnum b : CommandTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_COMMAND_TYPE = "commandType";
  private CommandTypeEnum commandType;

  public static final String JSON_PROPERTY_COMPLEMENT_DATA = "complementData";
  private Boolean complementData;

  public static final String JSON_PROPERTY_DAG_DATA = "dagData";
  private DagData dagData;

  public static final String JSON_PROPERTY_DEPENDENCE_SCHEDULE_TIMES = "dependenceScheduleTimes";
  private String dependenceScheduleTimes;

  public static final String JSON_PROPERTY_DRY_RUN = "dryRun";
  private Integer dryRun;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private String duration;

  public static final String JSON_PROPERTY_END_TIME = "endTime";
  private OffsetDateTime endTime;

  public static final String JSON_PROPERTY_ENVIRONMENT_CODE = "environmentCode";
  private Long environmentCode;

  public static final String JSON_PROPERTY_EXECUTOR_ID = "executorId";
  private Integer executorId;

  public static final String JSON_PROPERTY_EXECUTOR_NAME = "executorName";
  private String executorName;

  /**
   * Gets or Sets failureStrategy
   */
  public enum FailureStrategyEnum {
    END("END"),
    
    CONTINUE("CONTINUE");

    private String value;

    FailureStrategyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FailureStrategyEnum fromValue(String value) {
      for (FailureStrategyEnum b : FailureStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FAILURE_STRATEGY = "failureStrategy";
  private FailureStrategyEnum failureStrategy;

  public static final String JSON_PROPERTY_GLOBAL_PARAMS = "globalParams";
  private String globalParams;

  public static final String JSON_PROPERTY_HISTORY_CMD = "historyCmd";
  private String historyCmd;

  public static final String JSON_PROPERTY_HOST = "host";
  private String host;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  /**
   * Gets or Sets isSubProcess
   */
  public enum IsSubProcessEnum {
    FALSE("false"),
    
    TRUE("true");

    private String value;

    IsSubProcessEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static IsSubProcessEnum fromValue(String value) {
      for (IsSubProcessEnum b : IsSubProcessEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_IS_SUB_PROCESS = "isSubProcess";
  private IsSubProcessEnum isSubProcess;

  public static final String JSON_PROPERTY_LOCATIONS = "locations";
  private String locations;

  public static final String JSON_PROPERTY_MAX_TRY_TIMES = "maxTryTimes";
  private Integer maxTryTimes;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION = "processDefinition";
  private ProcessDefinition processDefinition;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_CODE = "processDefinitionCode";
  private Long processDefinitionCode;

  public static final String JSON_PROPERTY_PROCESS_DEFINITION_VERSION = "processDefinitionVersion";
  private Integer processDefinitionVersion;

  /**
   * Gets or Sets processInstancePriority
   */
  public enum ProcessInstancePriorityEnum {
    HIGHEST("HIGHEST"),
    
    HIGH("HIGH"),
    
    MEDIUM("MEDIUM"),
    
    LOW("LOW"),
    
    LOWEST("LOWEST");

    private String value;

    ProcessInstancePriorityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProcessInstancePriorityEnum fromValue(String value) {
      for (ProcessInstancePriorityEnum b : ProcessInstancePriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_PRIORITY = "processInstancePriority";
  private ProcessInstancePriorityEnum processInstancePriority;

  public static final String JSON_PROPERTY_PROCESS_INSTANCE_STOP = "processInstanceStop";
  private Boolean processInstanceStop;

  public static final String JSON_PROPERTY_QUEUE = "queue";
  private String queue;

  /**
   * Gets or Sets recovery
   */
  public enum RecoveryEnum {
    FALSE("false"),
    
    TRUE("true");

    private String value;

    RecoveryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RecoveryEnum fromValue(String value) {
      for (RecoveryEnum b : RecoveryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_RECOVERY = "recovery";
  private RecoveryEnum recovery;

  public static final String JSON_PROPERTY_RUN_TIMES = "runTimes";
  private Integer runTimes;

  public static final String JSON_PROPERTY_SCHEDULE_TIME = "scheduleTime";
  private OffsetDateTime scheduleTime;

  public static final String JSON_PROPERTY_START_TIME = "startTime";
  private OffsetDateTime startTime;

  /**
   * Gets or Sets state
   */
  public enum StateEnum {
    SUBMITTED_SUCCESS("SUBMITTED_SUCCESS"),
    
    RUNNING_EXECUTION("RUNNING_EXECUTION"),
    
    READY_PAUSE("READY_PAUSE"),
    
    PAUSE("PAUSE"),
    
    READY_STOP("READY_STOP"),
    
    STOP("STOP"),
    
    FAILURE("FAILURE"),
    
    SUCCESS("SUCCESS"),
    
    NEED_FAULT_TOLERANCE("NEED_FAULT_TOLERANCE"),
    
    KILL("KILL"),
    
    WAITING_THREAD("WAITING_THREAD"),
    
    WAITING_DEPEND("WAITING_DEPEND"),
    
    DELAY_EXECUTION("DELAY_EXECUTION"),
    
    FORCED_SUCCESS("FORCED_SUCCESS");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  /**
   * Gets or Sets taskDependType
   */
  public enum TaskDependTypeEnum {
    ONLY("TASK_ONLY"),
    
    PRE("TASK_PRE"),
    
    POST("TASK_POST");

    private String value;

    TaskDependTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TaskDependTypeEnum fromValue(String value) {
      for (TaskDependTypeEnum b : TaskDependTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TASK_DEPEND_TYPE = "taskDependType";
  private TaskDependTypeEnum taskDependType;

  public static final String JSON_PROPERTY_TENANT_CODE = "tenantCode";
  private String tenantCode;

  public static final String JSON_PROPERTY_TENANT_ID = "tenantId";
  private Integer tenantId;

  public static final String JSON_PROPERTY_TIMEOUT = "timeout";
  private Integer timeout;

  public static final String JSON_PROPERTY_VAR_POOL = "varPool";
  private String varPool;

  public static final String JSON_PROPERTY_WARNING_GROUP_ID = "warningGroupId";
  private Integer warningGroupId;

  /**
   * Gets or Sets warningType
   */
  public enum WarningTypeEnum {
    NONE("NONE"),
    
    SUCCESS("SUCCESS"),
    
    FAILURE("FAILURE"),
    
    ALL("ALL");

    private String value;

    WarningTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WarningTypeEnum fromValue(String value) {
      for (WarningTypeEnum b : WarningTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WARNING_TYPE = "warningType";
  private WarningTypeEnum warningType;

  public static final String JSON_PROPERTY_WORKER_GROUP = "workerGroup";
  private String workerGroup;


  public ProcessInstance cmdTypeIfComplement(CmdTypeIfComplementEnum cmdTypeIfComplement) {
    this.cmdTypeIfComplement = cmdTypeIfComplement;
    return this;
  }

   /**
   * Get cmdTypeIfComplement
   * @return cmdTypeIfComplement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CMD_TYPE_IF_COMPLEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CmdTypeIfComplementEnum getCmdTypeIfComplement() {
    return cmdTypeIfComplement;
  }


  @JsonProperty(JSON_PROPERTY_CMD_TYPE_IF_COMPLEMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCmdTypeIfComplement(CmdTypeIfComplementEnum cmdTypeIfComplement) {
    this.cmdTypeIfComplement = cmdTypeIfComplement;
  }


  public ProcessInstance commandParam(String commandParam) {
    this.commandParam = commandParam;
    return this;
  }

   /**
   * Get commandParam
   * @return commandParam
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMAND_PARAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandParam() {
    return commandParam;
  }


  @JsonProperty(JSON_PROPERTY_COMMAND_PARAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandParam(String commandParam) {
    this.commandParam = commandParam;
  }


  public ProcessInstance commandStartTime(OffsetDateTime commandStartTime) {
    this.commandStartTime = commandStartTime;
    return this;
  }

   /**
   * Get commandStartTime
   * @return commandStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMAND_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCommandStartTime() {
    return commandStartTime;
  }


  @JsonProperty(JSON_PROPERTY_COMMAND_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandStartTime(OffsetDateTime commandStartTime) {
    this.commandStartTime = commandStartTime;
  }


  public ProcessInstance commandType(CommandTypeEnum commandType) {
    this.commandType = commandType;
    return this;
  }

   /**
   * Get commandType
   * @return commandType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMMAND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CommandTypeEnum getCommandType() {
    return commandType;
  }


  @JsonProperty(JSON_PROPERTY_COMMAND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandType(CommandTypeEnum commandType) {
    this.commandType = commandType;
  }


  public ProcessInstance complementData(Boolean complementData) {
    this.complementData = complementData;
    return this;
  }

   /**
   * Get complementData
   * @return complementData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_COMPLEMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getComplementData() {
    return complementData;
  }


  @JsonProperty(JSON_PROPERTY_COMPLEMENT_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setComplementData(Boolean complementData) {
    this.complementData = complementData;
  }


  public ProcessInstance dagData(DagData dagData) {
    this.dagData = dagData;
    return this;
  }

   /**
   * Get dagData
   * @return dagData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DAG_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DagData getDagData() {
    return dagData;
  }


  @JsonProperty(JSON_PROPERTY_DAG_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDagData(DagData dagData) {
    this.dagData = dagData;
  }


  public ProcessInstance dependenceScheduleTimes(String dependenceScheduleTimes) {
    this.dependenceScheduleTimes = dependenceScheduleTimes;
    return this;
  }

   /**
   * Get dependenceScheduleTimes
   * @return dependenceScheduleTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEPENDENCE_SCHEDULE_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDependenceScheduleTimes() {
    return dependenceScheduleTimes;
  }


  @JsonProperty(JSON_PROPERTY_DEPENDENCE_SCHEDULE_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDependenceScheduleTimes(String dependenceScheduleTimes) {
    this.dependenceScheduleTimes = dependenceScheduleTimes;
  }


  public ProcessInstance dryRun(Integer dryRun) {
    this.dryRun = dryRun;
    return this;
  }

   /**
   * Get dryRun
   * @return dryRun
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DRY_RUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDryRun() {
    return dryRun;
  }


  @JsonProperty(JSON_PROPERTY_DRY_RUN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDryRun(Integer dryRun) {
    this.dryRun = dryRun;
  }


  public ProcessInstance duration(String duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(String duration) {
    this.duration = duration;
  }


  public ProcessInstance endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  @JsonProperty(JSON_PROPERTY_END_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public ProcessInstance environmentCode(Long environmentCode) {
    this.environmentCode = environmentCode;
    return this;
  }

   /**
   * Get environmentCode
   * @return environmentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEnvironmentCode() {
    return environmentCode;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentCode(Long environmentCode) {
    this.environmentCode = environmentCode;
  }


  public ProcessInstance executorId(Integer executorId) {
    this.executorId = executorId;
    return this;
  }

   /**
   * Get executorId
   * @return executorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXECUTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getExecutorId() {
    return executorId;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutorId(Integer executorId) {
    this.executorId = executorId;
  }


  public ProcessInstance executorName(String executorName) {
    this.executorName = executorName;
    return this;
  }

   /**
   * Get executorName
   * @return executorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXECUTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExecutorName() {
    return executorName;
  }


  @JsonProperty(JSON_PROPERTY_EXECUTOR_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExecutorName(String executorName) {
    this.executorName = executorName;
  }


  public ProcessInstance failureStrategy(FailureStrategyEnum failureStrategy) {
    this.failureStrategy = failureStrategy;
    return this;
  }

   /**
   * Get failureStrategy
   * @return failureStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAILURE_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FailureStrategyEnum getFailureStrategy() {
    return failureStrategy;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailureStrategy(FailureStrategyEnum failureStrategy) {
    this.failureStrategy = failureStrategy;
  }


  public ProcessInstance globalParams(String globalParams) {
    this.globalParams = globalParams;
    return this;
  }

   /**
   * Get globalParams
   * @return globalParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGlobalParams() {
    return globalParams;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalParams(String globalParams) {
    this.globalParams = globalParams;
  }


  public ProcessInstance historyCmd(String historyCmd) {
    this.historyCmd = historyCmd;
    return this;
  }

   /**
   * Get historyCmd
   * @return historyCmd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HISTORY_CMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHistoryCmd() {
    return historyCmd;
  }


  @JsonProperty(JSON_PROPERTY_HISTORY_CMD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHistoryCmd(String historyCmd) {
    this.historyCmd = historyCmd;
  }


  public ProcessInstance host(String host) {
    this.host = host;
    return this;
  }

   /**
   * Get host
   * @return host
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHost() {
    return host;
  }


  @JsonProperty(JSON_PROPERTY_HOST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHost(String host) {
    this.host = host;
  }


  public ProcessInstance id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public ProcessInstance isSubProcess(IsSubProcessEnum isSubProcess) {
    this.isSubProcess = isSubProcess;
    return this;
  }

   /**
   * Get isSubProcess
   * @return isSubProcess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_SUB_PROCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public IsSubProcessEnum getIsSubProcess() {
    return isSubProcess;
  }


  @JsonProperty(JSON_PROPERTY_IS_SUB_PROCESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsSubProcess(IsSubProcessEnum isSubProcess) {
    this.isSubProcess = isSubProcess;
  }


  public ProcessInstance locations(String locations) {
    this.locations = locations;
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLocations() {
    return locations;
  }


  @JsonProperty(JSON_PROPERTY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocations(String locations) {
    this.locations = locations;
  }


  public ProcessInstance maxTryTimes(Integer maxTryTimes) {
    this.maxTryTimes = maxTryTimes;
    return this;
  }

   /**
   * Get maxTryTimes
   * @return maxTryTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MAX_TRY_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxTryTimes() {
    return maxTryTimes;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TRY_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTryTimes(Integer maxTryTimes) {
    this.maxTryTimes = maxTryTimes;
  }


  public ProcessInstance name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ProcessInstance processDefinition(ProcessDefinition processDefinition) {
    this.processDefinition = processDefinition;
    return this;
  }

   /**
   * Get processDefinition
   * @return processDefinition
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProcessDefinition getProcessDefinition() {
    return processDefinition;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinition(ProcessDefinition processDefinition) {
    this.processDefinition = processDefinition;
  }


  public ProcessInstance processDefinitionCode(Long processDefinitionCode) {
    this.processDefinitionCode = processDefinitionCode;
    return this;
  }

   /**
   * Get processDefinitionCode
   * @return processDefinitionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getProcessDefinitionCode() {
    return processDefinitionCode;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionCode(Long processDefinitionCode) {
    this.processDefinitionCode = processDefinitionCode;
  }


  public ProcessInstance processDefinitionVersion(Integer processDefinitionVersion) {
    this.processDefinitionVersion = processDefinitionVersion;
    return this;
  }

   /**
   * Get processDefinitionVersion
   * @return processDefinitionVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getProcessDefinitionVersion() {
    return processDefinitionVersion;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_DEFINITION_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessDefinitionVersion(Integer processDefinitionVersion) {
    this.processDefinitionVersion = processDefinitionVersion;
  }


  public ProcessInstance processInstancePriority(ProcessInstancePriorityEnum processInstancePriority) {
    this.processInstancePriority = processInstancePriority;
    return this;
  }

   /**
   * Get processInstancePriority
   * @return processInstancePriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ProcessInstancePriorityEnum getProcessInstancePriority() {
    return processInstancePriority;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessInstancePriority(ProcessInstancePriorityEnum processInstancePriority) {
    this.processInstancePriority = processInstancePriority;
  }


  public ProcessInstance processInstanceStop(Boolean processInstanceStop) {
    this.processInstanceStop = processInstanceStop;
    return this;
  }

   /**
   * Get processInstanceStop
   * @return processInstanceStop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getProcessInstanceStop() {
    return processInstanceStop;
  }


  @JsonProperty(JSON_PROPERTY_PROCESS_INSTANCE_STOP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcessInstanceStop(Boolean processInstanceStop) {
    this.processInstanceStop = processInstanceStop;
  }


  public ProcessInstance queue(String queue) {
    this.queue = queue;
    return this;
  }

   /**
   * Get queue
   * @return queue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQueue() {
    return queue;
  }


  @JsonProperty(JSON_PROPERTY_QUEUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQueue(String queue) {
    this.queue = queue;
  }


  public ProcessInstance recovery(RecoveryEnum recovery) {
    this.recovery = recovery;
    return this;
  }

   /**
   * Get recovery
   * @return recovery
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RECOVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public RecoveryEnum getRecovery() {
    return recovery;
  }


  @JsonProperty(JSON_PROPERTY_RECOVERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRecovery(RecoveryEnum recovery) {
    this.recovery = recovery;
  }


  public ProcessInstance runTimes(Integer runTimes) {
    this.runTimes = runTimes;
    return this;
  }

   /**
   * Get runTimes
   * @return runTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RUN_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getRunTimes() {
    return runTimes;
  }


  @JsonProperty(JSON_PROPERTY_RUN_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRunTimes(Integer runTimes) {
    this.runTimes = runTimes;
  }


  public ProcessInstance scheduleTime(OffsetDateTime scheduleTime) {
    this.scheduleTime = scheduleTime;
    return this;
  }

   /**
   * Get scheduleTime
   * @return scheduleTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SCHEDULE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getScheduleTime() {
    return scheduleTime;
  }


  @JsonProperty(JSON_PROPERTY_SCHEDULE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScheduleTime(OffsetDateTime scheduleTime) {
    this.scheduleTime = scheduleTime;
  }


  public ProcessInstance startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  @JsonProperty(JSON_PROPERTY_START_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public ProcessInstance state(StateEnum state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public ProcessInstance taskDependType(TaskDependTypeEnum taskDependType) {
    this.taskDependType = taskDependType;
    return this;
  }

   /**
   * Get taskDependType
   * @return taskDependType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_DEPEND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskDependTypeEnum getTaskDependType() {
    return taskDependType;
  }


  @JsonProperty(JSON_PROPERTY_TASK_DEPEND_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskDependType(TaskDependTypeEnum taskDependType) {
    this.taskDependType = taskDependType;
  }


  public ProcessInstance tenantCode(String tenantCode) {
    this.tenantCode = tenantCode;
    return this;
  }

   /**
   * Get tenantCode
   * @return tenantCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTenantCode() {
    return tenantCode;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantCode(String tenantCode) {
    this.tenantCode = tenantCode;
  }


  public ProcessInstance tenantId(Integer tenantId) {
    this.tenantId = tenantId;
    return this;
  }

   /**
   * Get tenantId
   * @return tenantId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTenantId() {
    return tenantId;
  }


  @JsonProperty(JSON_PROPERTY_TENANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTenantId(Integer tenantId) {
    this.tenantId = tenantId;
  }


  public ProcessInstance timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeout() {
    return timeout;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public ProcessInstance varPool(String varPool) {
    this.varPool = varPool;
    return this;
  }

   /**
   * Get varPool
   * @return varPool
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VAR_POOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVarPool() {
    return varPool;
  }


  @JsonProperty(JSON_PROPERTY_VAR_POOL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVarPool(String varPool) {
    this.varPool = varPool;
  }


  public ProcessInstance warningGroupId(Integer warningGroupId) {
    this.warningGroupId = warningGroupId;
    return this;
  }

   /**
   * Get warningGroupId
   * @return warningGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WARNING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWarningGroupId() {
    return warningGroupId;
  }


  @JsonProperty(JSON_PROPERTY_WARNING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarningGroupId(Integer warningGroupId) {
    this.warningGroupId = warningGroupId;
  }


  public ProcessInstance warningType(WarningTypeEnum warningType) {
    this.warningType = warningType;
    return this;
  }

   /**
   * Get warningType
   * @return warningType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WARNING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WarningTypeEnum getWarningType() {
    return warningType;
  }


  @JsonProperty(JSON_PROPERTY_WARNING_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarningType(WarningTypeEnum warningType) {
    this.warningType = warningType;
  }


  public ProcessInstance workerGroup(String workerGroup) {
    this.workerGroup = workerGroup;
    return this;
  }

   /**
   * Get workerGroup
   * @return workerGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkerGroup() {
    return workerGroup;
  }


  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkerGroup(String workerGroup) {
    this.workerGroup = workerGroup;
  }


  /**
   * Return true if this ProcessInstance object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProcessInstance processInstance = (ProcessInstance) o;
    return Objects.equals(this.cmdTypeIfComplement, processInstance.cmdTypeIfComplement) &&
        Objects.equals(this.commandParam, processInstance.commandParam) &&
        Objects.equals(this.commandStartTime, processInstance.commandStartTime) &&
        Objects.equals(this.commandType, processInstance.commandType) &&
        Objects.equals(this.complementData, processInstance.complementData) &&
        Objects.equals(this.dagData, processInstance.dagData) &&
        Objects.equals(this.dependenceScheduleTimes, processInstance.dependenceScheduleTimes) &&
        Objects.equals(this.dryRun, processInstance.dryRun) &&
        Objects.equals(this.duration, processInstance.duration) &&
        Objects.equals(this.endTime, processInstance.endTime) &&
        Objects.equals(this.environmentCode, processInstance.environmentCode) &&
        Objects.equals(this.executorId, processInstance.executorId) &&
        Objects.equals(this.executorName, processInstance.executorName) &&
        Objects.equals(this.failureStrategy, processInstance.failureStrategy) &&
        Objects.equals(this.globalParams, processInstance.globalParams) &&
        Objects.equals(this.historyCmd, processInstance.historyCmd) &&
        Objects.equals(this.host, processInstance.host) &&
        Objects.equals(this.id, processInstance.id) &&
        Objects.equals(this.isSubProcess, processInstance.isSubProcess) &&
        Objects.equals(this.locations, processInstance.locations) &&
        Objects.equals(this.maxTryTimes, processInstance.maxTryTimes) &&
        Objects.equals(this.name, processInstance.name) &&
        Objects.equals(this.processDefinition, processInstance.processDefinition) &&
        Objects.equals(this.processDefinitionCode, processInstance.processDefinitionCode) &&
        Objects.equals(this.processDefinitionVersion, processInstance.processDefinitionVersion) &&
        Objects.equals(this.processInstancePriority, processInstance.processInstancePriority) &&
        Objects.equals(this.processInstanceStop, processInstance.processInstanceStop) &&
        Objects.equals(this.queue, processInstance.queue) &&
        Objects.equals(this.recovery, processInstance.recovery) &&
        Objects.equals(this.runTimes, processInstance.runTimes) &&
        Objects.equals(this.scheduleTime, processInstance.scheduleTime) &&
        Objects.equals(this.startTime, processInstance.startTime) &&
        Objects.equals(this.state, processInstance.state) &&
        Objects.equals(this.taskDependType, processInstance.taskDependType) &&
        Objects.equals(this.tenantCode, processInstance.tenantCode) &&
        Objects.equals(this.tenantId, processInstance.tenantId) &&
        Objects.equals(this.timeout, processInstance.timeout) &&
        Objects.equals(this.varPool, processInstance.varPool) &&
        Objects.equals(this.warningGroupId, processInstance.warningGroupId) &&
        Objects.equals(this.warningType, processInstance.warningType) &&
        Objects.equals(this.workerGroup, processInstance.workerGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cmdTypeIfComplement, commandParam, commandStartTime, commandType, complementData, dagData, dependenceScheduleTimes, dryRun, duration, endTime, environmentCode, executorId, executorName, failureStrategy, globalParams, historyCmd, host, id, isSubProcess, locations, maxTryTimes, name, processDefinition, processDefinitionCode, processDefinitionVersion, processInstancePriority, processInstanceStop, queue, recovery, runTimes, scheduleTime, startTime, state, taskDependType, tenantCode, tenantId, timeout, varPool, warningGroupId, warningType, workerGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProcessInstance {\n");
    sb.append("    cmdTypeIfComplement: ").append(toIndentedString(cmdTypeIfComplement)).append("\n");
    sb.append("    commandParam: ").append(toIndentedString(commandParam)).append("\n");
    sb.append("    commandStartTime: ").append(toIndentedString(commandStartTime)).append("\n");
    sb.append("    commandType: ").append(toIndentedString(commandType)).append("\n");
    sb.append("    complementData: ").append(toIndentedString(complementData)).append("\n");
    sb.append("    dagData: ").append(toIndentedString(dagData)).append("\n");
    sb.append("    dependenceScheduleTimes: ").append(toIndentedString(dependenceScheduleTimes)).append("\n");
    sb.append("    dryRun: ").append(toIndentedString(dryRun)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    environmentCode: ").append(toIndentedString(environmentCode)).append("\n");
    sb.append("    executorId: ").append(toIndentedString(executorId)).append("\n");
    sb.append("    executorName: ").append(toIndentedString(executorName)).append("\n");
    sb.append("    failureStrategy: ").append(toIndentedString(failureStrategy)).append("\n");
    sb.append("    globalParams: ").append(toIndentedString(globalParams)).append("\n");
    sb.append("    historyCmd: ").append(toIndentedString(historyCmd)).append("\n");
    sb.append("    host: ").append(toIndentedString(host)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isSubProcess: ").append(toIndentedString(isSubProcess)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    maxTryTimes: ").append(toIndentedString(maxTryTimes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    processDefinition: ").append(toIndentedString(processDefinition)).append("\n");
    sb.append("    processDefinitionCode: ").append(toIndentedString(processDefinitionCode)).append("\n");
    sb.append("    processDefinitionVersion: ").append(toIndentedString(processDefinitionVersion)).append("\n");
    sb.append("    processInstancePriority: ").append(toIndentedString(processInstancePriority)).append("\n");
    sb.append("    processInstanceStop: ").append(toIndentedString(processInstanceStop)).append("\n");
    sb.append("    queue: ").append(toIndentedString(queue)).append("\n");
    sb.append("    recovery: ").append(toIndentedString(recovery)).append("\n");
    sb.append("    runTimes: ").append(toIndentedString(runTimes)).append("\n");
    sb.append("    scheduleTime: ").append(toIndentedString(scheduleTime)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    taskDependType: ").append(toIndentedString(taskDependType)).append("\n");
    sb.append("    tenantCode: ").append(toIndentedString(tenantCode)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    varPool: ").append(toIndentedString(varPool)).append("\n");
    sb.append("    warningGroupId: ").append(toIndentedString(warningGroupId)).append("\n");
    sb.append("    warningType: ").append(toIndentedString(warningType)).append("\n");
    sb.append("    workerGroup: ").append(toIndentedString(workerGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

