/*
 * Dolphin Scheduler Api Docs
 * Dolphin Scheduler Api Docs
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.qk.datacenter.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.qk.datacenter.model.Property;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TaskDefinition
 */
@JsonPropertyOrder({
  TaskDefinition.JSON_PROPERTY_CODE,
  TaskDefinition.JSON_PROPERTY_CREATE_TIME,
  TaskDefinition.JSON_PROPERTY_DELAY_TIME,
  TaskDefinition.JSON_PROPERTY_DEPENDENCE,
  TaskDefinition.JSON_PROPERTY_DESCRIPTION,
  TaskDefinition.JSON_PROPERTY_ENVIRONMENT_CODE,
  TaskDefinition.JSON_PROPERTY_FAIL_RETRY_INTERVAL,
  TaskDefinition.JSON_PROPERTY_FAIL_RETRY_TIMES,
  TaskDefinition.JSON_PROPERTY_FLAG,
  TaskDefinition.JSON_PROPERTY_ID,
  TaskDefinition.JSON_PROPERTY_MODIFY_BY,
  TaskDefinition.JSON_PROPERTY_NAME,
  TaskDefinition.JSON_PROPERTY_PROJECT_CODE,
  TaskDefinition.JSON_PROPERTY_PROJECT_NAME,
  TaskDefinition.JSON_PROPERTY_RESOURCE_IDS,
  TaskDefinition.JSON_PROPERTY_TASK_PARAM_LIST,
  TaskDefinition.JSON_PROPERTY_TASK_PARAM_MAP,
  TaskDefinition.JSON_PROPERTY_TASK_PARAMS,
  TaskDefinition.JSON_PROPERTY_TASK_PRIORITY,
  TaskDefinition.JSON_PROPERTY_TASK_TYPE,
  TaskDefinition.JSON_PROPERTY_TIMEOUT,
  TaskDefinition.JSON_PROPERTY_TIMEOUT_FLAG,
  TaskDefinition.JSON_PROPERTY_TIMEOUT_NOTIFY_STRATEGY,
  TaskDefinition.JSON_PROPERTY_UPDATE_TIME,
  TaskDefinition.JSON_PROPERTY_USER_ID,
  TaskDefinition.JSON_PROPERTY_USER_NAME,
  TaskDefinition.JSON_PROPERTY_VERSION,
  TaskDefinition.JSON_PROPERTY_WORKER_GROUP
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-12-18T14:27:46.433909+08:00[Asia/Shanghai]")
public class TaskDefinition {
  public static final String JSON_PROPERTY_CODE = "code";
  private Long code;

  public static final String JSON_PROPERTY_CREATE_TIME = "createTime";
  private OffsetDateTime createTime;

  public static final String JSON_PROPERTY_DELAY_TIME = "delayTime";
  private Integer delayTime;

  public static final String JSON_PROPERTY_DEPENDENCE = "dependence";
  private String dependence;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ENVIRONMENT_CODE = "environmentCode";
  private Long environmentCode;

  public static final String JSON_PROPERTY_FAIL_RETRY_INTERVAL = "failRetryInterval";
  private Integer failRetryInterval;

  public static final String JSON_PROPERTY_FAIL_RETRY_TIMES = "failRetryTimes";
  private Integer failRetryTimes;

  /**
   * Gets or Sets flag
   */
  public enum FlagEnum {
    FALSE("false"),
    
    TRUE("true");

    private String value;

    FlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static FlagEnum fromValue(String value) {
      for (FlagEnum b : FlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_FLAG = "flag";
  private FlagEnum flag;

  public static final String JSON_PROPERTY_ID = "id";
  private Integer id;

  public static final String JSON_PROPERTY_MODIFY_BY = "modifyBy";
  private String modifyBy;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROJECT_CODE = "projectCode";
  private Long projectCode;

  public static final String JSON_PROPERTY_PROJECT_NAME = "projectName";
  private String projectName;

  public static final String JSON_PROPERTY_RESOURCE_IDS = "resourceIds";
  private String resourceIds;

  public static final String JSON_PROPERTY_TASK_PARAM_LIST = "taskParamList";
  private List<Property> taskParamList = null;

  public static final String JSON_PROPERTY_TASK_PARAM_MAP = "taskParamMap";
  private Map<String, String> taskParamMap = null;

  public static final String JSON_PROPERTY_TASK_PARAMS = "taskParams";
  private String taskParams;

  /**
   * Gets or Sets taskPriority
   */
  public enum TaskPriorityEnum {
    HIGHEST("HIGHEST"),
    
    HIGH("HIGH"),
    
    MEDIUM("MEDIUM"),
    
    LOW("LOW"),
    
    LOWEST("LOWEST");

    private String value;

    TaskPriorityEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TaskPriorityEnum fromValue(String value) {
      for (TaskPriorityEnum b : TaskPriorityEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TASK_PRIORITY = "taskPriority";
  private TaskPriorityEnum taskPriority;

  public static final String JSON_PROPERTY_TASK_TYPE = "taskType";
  private String taskType;

  public static final String JSON_PROPERTY_TIMEOUT = "timeout";
  private Integer timeout;

  /**
   * Gets or Sets timeoutFlag
   */
  public enum TimeoutFlagEnum {
    CLOSE("CLOSE"),
    
    OPEN("OPEN");

    private String value;

    TimeoutFlagEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeoutFlagEnum fromValue(String value) {
      for (TimeoutFlagEnum b : TimeoutFlagEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TIMEOUT_FLAG = "timeoutFlag";
  private TimeoutFlagEnum timeoutFlag;

  /**
   * Gets or Sets timeoutNotifyStrategy
   */
  public enum TimeoutNotifyStrategyEnum {
    WARN("WARN"),
    
    FAILED("FAILED"),
    
    WARNFAILED("WARNFAILED");

    private String value;

    TimeoutNotifyStrategyEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TimeoutNotifyStrategyEnum fromValue(String value) {
      for (TimeoutNotifyStrategyEnum b : TimeoutNotifyStrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TIMEOUT_NOTIFY_STRATEGY = "timeoutNotifyStrategy";
  private TimeoutNotifyStrategyEnum timeoutNotifyStrategy;

  public static final String JSON_PROPERTY_UPDATE_TIME = "updateTime";
  private OffsetDateTime updateTime;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private Integer userId;

  public static final String JSON_PROPERTY_USER_NAME = "userName";
  private String userName;

  public static final String JSON_PROPERTY_VERSION = "version";
  private Integer version;

  public static final String JSON_PROPERTY_WORKER_GROUP = "workerGroup";
  private String workerGroup;


  public TaskDefinition code(Long code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCode(Long code) {
    this.code = code;
  }


  public TaskDefinition createTime(OffsetDateTime createTime) {
    this.createTime = createTime;
    return this;
  }

   /**
   * Get createTime
   * @return createTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreateTime() {
    return createTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreateTime(OffsetDateTime createTime) {
    this.createTime = createTime;
  }


  public TaskDefinition delayTime(Integer delayTime) {
    this.delayTime = delayTime;
    return this;
  }

   /**
   * Get delayTime
   * @return delayTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DELAY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getDelayTime() {
    return delayTime;
  }


  @JsonProperty(JSON_PROPERTY_DELAY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDelayTime(Integer delayTime) {
    this.delayTime = delayTime;
  }


  public TaskDefinition dependence(String dependence) {
    this.dependence = dependence;
    return this;
  }

   /**
   * Get dependence
   * @return dependence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DEPENDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDependence() {
    return dependence;
  }


  @JsonProperty(JSON_PROPERTY_DEPENDENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDependence(String dependence) {
    this.dependence = dependence;
  }


  public TaskDefinition description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(String description) {
    this.description = description;
  }


  public TaskDefinition environmentCode(Long environmentCode) {
    this.environmentCode = environmentCode;
    return this;
  }

   /**
   * Get environmentCode
   * @return environmentCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getEnvironmentCode() {
    return environmentCode;
  }


  @JsonProperty(JSON_PROPERTY_ENVIRONMENT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnvironmentCode(Long environmentCode) {
    this.environmentCode = environmentCode;
  }


  public TaskDefinition failRetryInterval(Integer failRetryInterval) {
    this.failRetryInterval = failRetryInterval;
    return this;
  }

   /**
   * Get failRetryInterval
   * @return failRetryInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAIL_RETRY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFailRetryInterval() {
    return failRetryInterval;
  }


  @JsonProperty(JSON_PROPERTY_FAIL_RETRY_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailRetryInterval(Integer failRetryInterval) {
    this.failRetryInterval = failRetryInterval;
  }


  public TaskDefinition failRetryTimes(Integer failRetryTimes) {
    this.failRetryTimes = failRetryTimes;
    return this;
  }

   /**
   * Get failRetryTimes
   * @return failRetryTimes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FAIL_RETRY_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFailRetryTimes() {
    return failRetryTimes;
  }


  @JsonProperty(JSON_PROPERTY_FAIL_RETRY_TIMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFailRetryTimes(Integer failRetryTimes) {
    this.failRetryTimes = failRetryTimes;
  }


  public TaskDefinition flag(FlagEnum flag) {
    this.flag = flag;
    return this;
  }

   /**
   * Get flag
   * @return flag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FlagEnum getFlag() {
    return flag;
  }


  @JsonProperty(JSON_PROPERTY_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlag(FlagEnum flag) {
    this.flag = flag;
  }


  public TaskDefinition id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(Integer id) {
    this.id = id;
  }


  public TaskDefinition modifyBy(String modifyBy) {
    this.modifyBy = modifyBy;
    return this;
  }

   /**
   * Get modifyBy
   * @return modifyBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MODIFY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModifyBy() {
    return modifyBy;
  }


  @JsonProperty(JSON_PROPERTY_MODIFY_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModifyBy(String modifyBy) {
    this.modifyBy = modifyBy;
  }


  public TaskDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public TaskDefinition projectCode(Long projectCode) {
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Get projectCode
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getProjectCode() {
    return projectCode;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectCode(Long projectCode) {
    this.projectCode = projectCode;
  }


  public TaskDefinition projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * Get projectName
   * @return projectName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProjectName() {
    return projectName;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }


  public TaskDefinition resourceIds(String resourceIds) {
    this.resourceIds = resourceIds;
    return this;
  }

   /**
   * Get resourceIds
   * @return resourceIds
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_RESOURCE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResourceIds() {
    return resourceIds;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResourceIds(String resourceIds) {
    this.resourceIds = resourceIds;
  }


  public TaskDefinition taskParamList(List<Property> taskParamList) {
    this.taskParamList = taskParamList;
    return this;
  }

  public TaskDefinition addTaskParamListItem(Property taskParamListItem) {
    if (this.taskParamList == null) {
      this.taskParamList = new ArrayList<>();
    }
    this.taskParamList.add(taskParamListItem);
    return this;
  }

   /**
   * Get taskParamList
   * @return taskParamList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_PARAM_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Property> getTaskParamList() {
    return taskParamList;
  }


  @JsonProperty(JSON_PROPERTY_TASK_PARAM_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskParamList(List<Property> taskParamList) {
    this.taskParamList = taskParamList;
  }


  public TaskDefinition taskParamMap(Map<String, String> taskParamMap) {
    this.taskParamMap = taskParamMap;
    return this;
  }

  public TaskDefinition putTaskParamMapItem(String key, String taskParamMapItem) {
    if (this.taskParamMap == null) {
      this.taskParamMap = new HashMap<>();
    }
    this.taskParamMap.put(key, taskParamMapItem);
    return this;
  }

   /**
   * Get taskParamMap
   * @return taskParamMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_PARAM_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, String> getTaskParamMap() {
    return taskParamMap;
  }


  @JsonProperty(JSON_PROPERTY_TASK_PARAM_MAP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskParamMap(Map<String, String> taskParamMap) {
    this.taskParamMap = taskParamMap;
  }


  public TaskDefinition taskParams(String taskParams) {
    this.taskParams = taskParams;
    return this;
  }

   /**
   * Get taskParams
   * @return taskParams
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskParams() {
    return taskParams;
  }


  @JsonProperty(JSON_PROPERTY_TASK_PARAMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskParams(String taskParams) {
    this.taskParams = taskParams;
  }


  public TaskDefinition taskPriority(TaskPriorityEnum taskPriority) {
    this.taskPriority = taskPriority;
    return this;
  }

   /**
   * Get taskPriority
   * @return taskPriority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TaskPriorityEnum getTaskPriority() {
    return taskPriority;
  }


  @JsonProperty(JSON_PROPERTY_TASK_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskPriority(TaskPriorityEnum taskPriority) {
    this.taskPriority = taskPriority;
  }


  public TaskDefinition taskType(String taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TASK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTaskType() {
    return taskType;
  }


  @JsonProperty(JSON_PROPERTY_TASK_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaskType(String taskType) {
    this.taskType = taskType;
  }


  public TaskDefinition timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Get timeout
   * @return timeout
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTimeout() {
    return timeout;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }


  public TaskDefinition timeoutFlag(TimeoutFlagEnum timeoutFlag) {
    this.timeoutFlag = timeoutFlag;
    return this;
  }

   /**
   * Get timeoutFlag
   * @return timeoutFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeoutFlagEnum getTimeoutFlag() {
    return timeoutFlag;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT_FLAG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeoutFlag(TimeoutFlagEnum timeoutFlag) {
    this.timeoutFlag = timeoutFlag;
  }


  public TaskDefinition timeoutNotifyStrategy(TimeoutNotifyStrategyEnum timeoutNotifyStrategy) {
    this.timeoutNotifyStrategy = timeoutNotifyStrategy;
    return this;
  }

   /**
   * Get timeoutNotifyStrategy
   * @return timeoutNotifyStrategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIMEOUT_NOTIFY_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TimeoutNotifyStrategyEnum getTimeoutNotifyStrategy() {
    return timeoutNotifyStrategy;
  }


  @JsonProperty(JSON_PROPERTY_TIMEOUT_NOTIFY_STRATEGY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTimeoutNotifyStrategy(TimeoutNotifyStrategyEnum timeoutNotifyStrategy) {
    this.timeoutNotifyStrategy = timeoutNotifyStrategy;
  }


  public TaskDefinition updateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
    return this;
  }

   /**
   * Get updateTime
   * @return updateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdateTime() {
    return updateTime;
  }


  @JsonProperty(JSON_PROPERTY_UPDATE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdateTime(OffsetDateTime updateTime) {
    this.updateTime = updateTime;
  }


  public TaskDefinition userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  public TaskDefinition userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserName() {
    return userName;
  }


  @JsonProperty(JSON_PROPERTY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserName(String userName) {
    this.userName = userName;
  }


  public TaskDefinition version(Integer version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(Integer version) {
    this.version = version;
  }


  public TaskDefinition workerGroup(String workerGroup) {
    this.workerGroup = workerGroup;
    return this;
  }

   /**
   * Get workerGroup
   * @return workerGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWorkerGroup() {
    return workerGroup;
  }


  @JsonProperty(JSON_PROPERTY_WORKER_GROUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkerGroup(String workerGroup) {
    this.workerGroup = workerGroup;
  }


  /**
   * Return true if this TaskDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaskDefinition taskDefinition = (TaskDefinition) o;
    return Objects.equals(this.code, taskDefinition.code) &&
        Objects.equals(this.createTime, taskDefinition.createTime) &&
        Objects.equals(this.delayTime, taskDefinition.delayTime) &&
        Objects.equals(this.dependence, taskDefinition.dependence) &&
        Objects.equals(this.description, taskDefinition.description) &&
        Objects.equals(this.environmentCode, taskDefinition.environmentCode) &&
        Objects.equals(this.failRetryInterval, taskDefinition.failRetryInterval) &&
        Objects.equals(this.failRetryTimes, taskDefinition.failRetryTimes) &&
        Objects.equals(this.flag, taskDefinition.flag) &&
        Objects.equals(this.id, taskDefinition.id) &&
        Objects.equals(this.modifyBy, taskDefinition.modifyBy) &&
        Objects.equals(this.name, taskDefinition.name) &&
        Objects.equals(this.projectCode, taskDefinition.projectCode) &&
        Objects.equals(this.projectName, taskDefinition.projectName) &&
        Objects.equals(this.resourceIds, taskDefinition.resourceIds) &&
        Objects.equals(this.taskParamList, taskDefinition.taskParamList) &&
        Objects.equals(this.taskParamMap, taskDefinition.taskParamMap) &&
        Objects.equals(this.taskParams, taskDefinition.taskParams) &&
        Objects.equals(this.taskPriority, taskDefinition.taskPriority) &&
        Objects.equals(this.taskType, taskDefinition.taskType) &&
        Objects.equals(this.timeout, taskDefinition.timeout) &&
        Objects.equals(this.timeoutFlag, taskDefinition.timeoutFlag) &&
        Objects.equals(this.timeoutNotifyStrategy, taskDefinition.timeoutNotifyStrategy) &&
        Objects.equals(this.updateTime, taskDefinition.updateTime) &&
        Objects.equals(this.userId, taskDefinition.userId) &&
        Objects.equals(this.userName, taskDefinition.userName) &&
        Objects.equals(this.version, taskDefinition.version) &&
        Objects.equals(this.workerGroup, taskDefinition.workerGroup);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, createTime, delayTime, dependence, description, environmentCode, failRetryInterval, failRetryTimes, flag, id, modifyBy, name, projectCode, projectName, resourceIds, taskParamList, taskParamMap, taskParams, taskPriority, taskType, timeout, timeoutFlag, timeoutNotifyStrategy, updateTime, userId, userName, version, workerGroup);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaskDefinition {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    createTime: ").append(toIndentedString(createTime)).append("\n");
    sb.append("    delayTime: ").append(toIndentedString(delayTime)).append("\n");
    sb.append("    dependence: ").append(toIndentedString(dependence)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    environmentCode: ").append(toIndentedString(environmentCode)).append("\n");
    sb.append("    failRetryInterval: ").append(toIndentedString(failRetryInterval)).append("\n");
    sb.append("    failRetryTimes: ").append(toIndentedString(failRetryTimes)).append("\n");
    sb.append("    flag: ").append(toIndentedString(flag)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    modifyBy: ").append(toIndentedString(modifyBy)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    resourceIds: ").append(toIndentedString(resourceIds)).append("\n");
    sb.append("    taskParamList: ").append(toIndentedString(taskParamList)).append("\n");
    sb.append("    taskParamMap: ").append(toIndentedString(taskParamMap)).append("\n");
    sb.append("    taskParams: ").append(toIndentedString(taskParams)).append("\n");
    sb.append("    taskPriority: ").append(toIndentedString(taskPriority)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    timeoutFlag: ").append(toIndentedString(timeoutFlag)).append("\n");
    sb.append("    timeoutNotifyStrategy: ").append(toIndentedString(timeoutNotifyStrategy)).append("\n");
    sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    workerGroup: ").append(toIndentedString(workerGroup)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

