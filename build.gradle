buildscript {
    repositories {
        mavenLocal()
        maven {
            url = 'http://172.31.0.18:8081/repository/alibaba'
            credentials {
                username = 'qk-dm-dev'
                password = 'qk-dm-dev123'
            }
        }
    }
}

group 'com.qk'
version "${version}"
description = '数据中台'
ext.snapshotBuild = version.contains("SNAPSHOT")


subprojects {
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    repositories {
        mavenLocal()
        maven {
            url = 'http://172.31.0.18:8081/repository/alibaba'
            credentials {
                username = 'qk-dm-dev'
                password = 'qk-dm-dev123'
            }
        }
    }
    plugins.withType(JavaPlugin) {
        project.sourceCompatibility = "11"
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
    println(project.name)
    if (!project.name.contains("dam-dependencies")){
        apply plugin: 'java'
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                    from components.java
                    afterEvaluate {
                        group = project.group
                        artifactId = project.name
                        version = project.version
                    }
                }
            }
        }
        uploadArchives {
            repositories {
                mavenDeployer {
                    def releasesRepoUrl = "http://172.31.0.18:8081/repository/dm-releases/"
                    def snapshotsRepoUrl = "http://172.31.0.18:8081/repository/dm-snapshot/"
                    def url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    repository(url: url) {
                        authentication(userName: "admin", password: "zhudao123")
                    }
                }
            }
        }
    }


}

project.afterEvaluate {
    getSubprojects().forEach() { project ->
//        def uploadTask = project.tasks.getByName('uploadArchives')
//        println(project.tasks.getByName('uploadArchives'))
    }
    println "project配置成功"
}