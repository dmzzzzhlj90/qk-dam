plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id "com.github.shalousun.smart-doc" version "${smartDoc}"
    id 'java'
}

configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}
dependencies {
    compile project(":commons-core")
    compile project(":qk-querydsl")
    compile project(":qk-data-redis")
    compile project(":commons-log")
    compile project(":leaf-core")
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor("javax.annotation:javax.annotation-api","com.querydsl:querydsl-apt:4.4.0:jpa","org.projectlombok:lombok")
}
dependencyManagement {
    imports {
        mavenBom "com.qk:dam-dependencies:${damDependenciesVersion}"
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

smartdoc {
    configFile = file("src/main/resources/smart-doc.json")
}

test {
    useJUnitPlatform()
}
