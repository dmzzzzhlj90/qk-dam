plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
    id 'com.bmuschko.docker-spring-boot-application' version "${bmuschkoDocker}"
}
version "${damProfilesActive}-v${dmDatastandardsVersion}"
group "com.qk.dm.reptile"
configurations {
    [apiElements, runtimeElements].each {
        it.outgoing.artifacts.removeIf { it.buildDependencies.getDependencies(null).contains(jar) }
        it.outgoing.artifact(bootJar)
    }
}
configure(tasks.processResources) {
}

docker {
    springBootApplication {
        baseImage = "${jre11Image}"
        ports = [8881]
        images = ["${imagePush}/${project.name}:${version}"]
        jvmArgs = ['-Xmx512m']
    }
}
compileJava {
    doFirst {
        options.compilerArgs = [
                //添加mapStruct的一些配置
                '-Amapstruct.unmappedTargetPolicy=IGNORE',//未映射字段默认报错
                '-Amapstruct.suppressGeneratorTimestamp=false',//未映射字段默认报错
                '-Aspatial=false'//未映射字段默认报错
        ]
    }
}

dependencies {
    implementation project(":qk-data-jpa")
    implementation project(":dam-mvc-validation")
    implementation project(":dam-log")
    implementation project(":qk-authorization")
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config"
    implementation "com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery"
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'com.alibaba:easyexcel'
    implementation 'org.mapstruct:mapstruct'
    implementation 'org.aspectj:aspectjrt:1.9.7'
    implementation 'org.aspectj:aspectjweaver:1.9.7'
    compile group: 'cn.hutool', name: 'hutool-db',version: '5.6.6'
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "com.querydsl:querydsl-apt:${queryDSLVersion}:jpa",
            "javax.annotation:javax.annotation-api",
            "org.projectlombok:lombok",
            'org.mapstruct:mapstruct-processor')
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testAnnotationProcessor('org.mapstruct:mapstruct-processor')
}
dependencyManagement {
    imports {
        mavenBom "com.qk.dam:dam-dependencies:${damDependenciesVersion}"
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useTestNG {
        suites(file('src/test/resources/testng.xml'));
    }
}
